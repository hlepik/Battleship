
@page
@using GameBrain
@using Domain
@using System.Collections
@model WebApp.Pages.GamePlay.Index

@{var player = "";}
@if(Model.BattleShip.NextMoveByX )
{
    player = Model.BattleShip.Player1;
}
else
{
    player = Model.BattleShip.Player2;
}

<h2>@player turn </h2>

@functions
{

    public bool Hidden { get; set; }
    string GetCellContent(CellState cell)
    {
        var res = "";

        if (cell != null)
        {
            if (cell.Ship)
            {
                res = Hidden ? "":"ðŸŸ¦";
            }
            if (cell.Bomb)
            {
                res =  "ðŸŸ¥";
            }
            if (cell.Empty)
            {
                res = "";
            }
            if (cell.Miss)
            {
                res = "â€¢";
            }

        }

        return res;
    }


}
<div class="container">
    @if (Model.Message.Length > 1)
    {
        <div class="alert alert-danger" role="alert">@Model.Message</div>
    }
    @if (Model.GameOver.Length > 1)
    {
        <div class="alert alert-success" role="alert">@Model.GameOver @player won!</div>
        <a class="btn btn-outline-info" asp-page="/ViewGame/Index" asp-route-id="@Model.Game?.GameId">View game states</a>
    }
<div class="row">
    <div class="col-@(Model.BattleShip.Width > 14 ? "2,5" : "5") text-right">
        <div class="text-label" >Game boats</div>
        <tr>
                  @foreach (var each in Model.Game!.NextMoveByX ? Model.Game.PlayerB.GameBoats.OrderBy(x => x.Size) : Model.Game.PlayerA.GameBoats.OrderBy(x => x.Size))
                  {
               var boat = "";
               for (int i = 0; i < each.Size; i++)
               {
                   if(each.IsSunken)
                   {

                       boat += "ðŸŸ¥";
                   }
                   else
                   {
                       boat += "ðŸŸ¦";
                   }
               }

               <td><a class="list-group list-group-flush">@boat</a></td>
           }
     </tr>
    </div>
         <div class="col-@(Model.BattleShip.Width > 14 ? "9" : "7") ">
             <table class="no-boarder">
                 @{ Hidden = true; }

                 @for (int x = 0; x < Model.BattleShip.Width + 1; x++)
                 {
                     if (x == 0)
                     {
                         <td> @Html.Raw("&nbsp;")</td>
                     }
                     else
                     {
                         <td class="no-boarder"> @Html.Raw(x)</td>
                     }
                 }


                 @for (int y = 0; y < Model.BattleShip.Height; y++)
                 {

                     char[] alpha = "ABCDEFGHIJKLMNOPQRSTUVWXYZ".ToCharArray();
                     <tr>

                         <td class="no-boarder">
                             @Html.Raw(alpha[y])
                         </td>

                         @for (int x = 0; x < Model.BattleShip.Width; x++)
                         {
                             var square = (GetCellContent(Model.BattleShip.GetCell(x, y, Model.BattleShip.NextMoveByX ? Model.BattleShip.Board2 : Model.BattleShip.Board1)));
                             if (square == "")
                             {
                             <td class="table table-bordered border-size text-center"

                                 onclick="window.location.href = '?x=@x&y=@y&id=@Model.Game?.GameId'" style="cursor: pointer">
                                 </td>
                             }
                             else
                             {
                                 <td class="table table-bordered border-size text-center" >@square</td>
                             }


                         }
                     </tr>
                 }
                 @{ Hidden = false; }
             </table>
             <table class="no-boarder">

            @for (int x = 0; x < Model.BattleShip.Width + 1; x++)
            {
                if (x == 0)
                {
                    <td> @Html.Raw("&nbsp;")</td>
                }
                else
                {
                    <td class="no-boarder"> @Html.Raw(x)</td>
                }
            }


            @for (int y = 0; y < Model.BattleShip.Height; y++)
            {

                char[] alpha = "ABCDEFGHIJKLMNOPQRSTUVWXYZ".ToCharArray();
                <tr>

                    <td class="no-boarder">
                        @Html.Raw(alpha[y])
                    </td>

                    @for (int x = 0; x < Model.BattleShip.Width; x++)
                    {
                        <td class="table table-bordered border-size text-center">
                            @Html.Raw(GetCellContent(Model.BattleShip.GetCell(x, y, Model.BattleShip.NextMoveByX ? Model.BattleShip.Board1: Model.BattleShip.Board2)))
                        </td>
                    }
                </tr>
            }

        </table>
    </div>
     </div>
</div>



